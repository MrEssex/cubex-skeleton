name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  #  provide_php_versions_json:
  #    name: Provide PHP Version for Matrix
  #
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v2
  #        with:
  #          persist-credentials: false
  #
  #      - name: Cache Composer dependencies
  #        uses: actions/cache@v2
  #        with:
  #          path: /tmp/composer-cache
  #          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
  #
  #      - uses: shivammathur/setup-php@v2
  #        with:
  #          php-version: 7.4
  #          extensions: apcu
  #          coverage: none
  #
  #      - run: composer validate --strict
  #
  #      - run: composer install
  #        env:
  #          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH_JSON }}
  #
  #      - run: composer require symplify/easy-ci --dev
  #
  #      - run: vendor/bin/easy-ci php-versions-json
  #
  #      - id: output_data
  #        run: echo "::set-output name=matrix::$(vendor/bin/easy-ci php-versions-json)"
  #
  #    outputs:
  #      matrix: ${{ steps.output_data.outputs.matrix }}

  build-test:
    #    needs: provide_php_versions_json

    runs-on: ubuntu-latest

    name: PHP ${{ matrix.php }} Build

    strategy:
      fail-fast: false
      matrix:
        #        php: ${{ fromJson(needs.provide_php_versions_json.outputs.matrix) }}
        php: [ '7.4', '8.0' ]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - run: git config --global credential.helper store

      - name: Add HTTP basic auth credentials
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: apcu
          coverage: none

      - run: composer install
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH_JSON }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{secrets.PAT}}

      - run: yarn build

  coverage:
    runs-on: ubuntu-latest

    name: Coverage Reporter

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - run: git config --global credential.helper store

      - name: Add HTTP basic auth credentials
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: apcu
          coverage: xdebug

      - run: composer install
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH_JSON }}

      - run: composer run-script test

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{secrets.PAT}}

      - run: yarn coverage

      - uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/backend/clover.xml:clover
            ${{github.workspace}}/coverage/frontend/lcov.info:lcov
  lint:
    runs-on: ubuntu-latest

    name: Linter

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - run: git config --global credential.helper store

      - name: Add HTTP basic auth credentials
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: apcu
          coverage: none

      - run: composer install
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH_JSON }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{secrets.PAT}}

      - run: yarn lint
